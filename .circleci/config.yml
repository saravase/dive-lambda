version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@9.0

jobs:
  build:
    docker:
      - image: circleci/golang:1.19
    steps:
      - checkout

      # Cache dependencies
      - restore_cache:
          keys:
            - go-mod-cache-v1-{{ checksum "go.sum" }}
            - go-mod-cache-v1-

      - run:
          name: Install dependencies
          command: go mod download

      - save_cache:
          paths:
            - /go/pkg/mod
          key: go-mod-cache-v1-{{ checksum "go.sum" }}

      # Build the Go application
      - run:
          name: Build
          command: go build -o dive-lambda .

      # Save the built binary
      - persist_to_workspace:
          root: ./
          paths:
            - dive-lambda

  push:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - attach_workspace:
          at: /workspace

      - setup_remote_docker

      - run:
          name: Build Docker image
          command: |
            docker build -t dive-lambda:${CIRCLE_SHA1} .

      - run:
          name: Tag Docker image
          command: |
            docker tag dive-lambda:${CIRCLE_SHA1} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/dive-lambda:${CIRCLE_SHA1}
      - aws-ecr/build_and_push_image:
          account-url: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          repo: dive-lambda
          region: ${AWS_REGION}
          tag: "${CIRCLE_SHA1}"
          auth:
            access-key-id: ${AWS_ACCESS_KEY_ID}
            secret-access-key: ${AWS_SECRET_ACCESS_KEY}

workflows:
  version: 2
  build-and-push:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - push:
          requires:
            - build
          filters:
            branches:
              only:
                - main
